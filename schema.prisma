generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id          String    @id @default(cuid())
  name        String?
  email       String?   @unique
  createdAt   DateTime  @default(now()) @map(name: "created_at")
  updatedAt   DateTime  @updatedAt @map(name: "updated_at")
  status      String    @default("active")
  accountType String?
  Project     Project[]
  Media       Media[]
  Render      Render[]

  @@map(name: "users")
}

model Project {
  id           String         @id @default(cuid())
  title        String
  author       User?          @relation(references: [id], fields: [userId])
  createdAt    DateTime       @default(now()) @map(name: "created_at")
  updatedAt    DateTime       @updatedAt @map(name: "updated_at")
  userId       String?
  ProjectMedia ProjectMedia[]
}

model ProjectMedia {
  id        String   @id @default(cuid())
  title     String?
  project   Project  @relation(references: [id], fields: [projectId])
  projectId String
  Media     Media    @relation(references: [id], fields: [mediaId])
  mediaId   String
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
}

model Media {
  id           String         @id @default(cuid())
  name         String
  url          String
  thumbnailUrl String
  author       User?          @relation(references: [id], fields: [userId])
  createdAt    DateTime       @default(now()) @map(name: "created_at")
  userId       String?
  ProjectMedia ProjectMedia[]
}

model Render {
  id        String   @id @default(cuid())
  name      String?
  url       String?
  author    User?    @relation(references: [id], fields: [userId])
  createdAt DateTime @default(now()) @map(name: "created_at")
  userId    String?
}
